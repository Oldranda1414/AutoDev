---
title: Services Design
---
classDiagram

    class Configuration {
        add_config(model: str, project_path: str, prompt_path: str) 
%% pseudo code: 
%%     def add_config(model, project_path, prompt_path):
%%         contents = Generator.generate_config(model, project_path, prompt_path)
%%         Output.create_file("flake.nix", contents)
    }

    class Direnv {
        add_direnv(project_path: str)
    }

    class Generator {
        generate_config(model_name: str, project_path: str, prompt_path: str) -> str
%% pseudo code: 
%%     def generateConfig(model_name, project_path, prompt_path):
%%         model = Model(model)
%%         message = Prompt.getPrompt(project_path, prompt_path)
%%         return model.ask(message)
    }

    class Model {
        __init__(name: str, timeout: int = 5000) -> Model
        ask(message: str) -> str
    }

    class Prompt {
        get_prompt(project_path: str, prompt_path: str) -> str
    }

    class Output {
        init(quiet: bool)
        create_file(name: str, contents: str, path: str = "./.")
        print(message: str)
    }

    class Reader {
        read_file(path: str) -> str
        read_dir(path: str = "./.") -> FileSystemObject
    }

    Direnv ..> Output
    Configuration ..> Output
    Configuration ..> Generator
    Generator ..> Model
    Generator ..> Prompt
    Prompt ..> Reader
