---
title: Services Design
---
classDiagram

    class Configuration {
        addConfig(model: str = None, project_path: str = "./.", prompt_path: str = None) 
%% pseudo code: 
%%     def addConfig(model, project_path, prompt_path):
%%         contents = Generator.generateConfig(model, project_path, prompt_path)
%%         Output.createFile("flake.nix", contents)
    }

    class Direnv {
        addDirenv(project_path: str = "./.")
    }

    class Generator {
        generateConfig(model_name: str, project_path: str = "./.", prompt_path: str = None) -> str
%% pseudo code: 
%%     def generateConfig(model_name, project_path, prompt_path):
%%         model = Model(model)
%%         message = Prompt.getPrompt(project_path, prompt_path)
%%         return model.ask(message)
    }

    class Model {
        __init__(name: str, timeout: int = 5000) -> Model
        ask(message: str) -> str
    }

    class Prompt {
        getPrompt(project_path: str = "./.", prompt_path: str = None) -> str
    }

    class Output {
        init(quiet: bool = false)
        createFile(name: str, contents: str, path: str = "./.")
        print(message: str)
    }

    class Reader {
        readFile(path: str) -> str
        readDir(path: str = "./.") -> FileSystemObject
    }

    Direnv ..> Output
    Configuration ..> Output
    Configuration ..> Generator
    Generator ..> Model
    Generator ..> Prompt
    Prompt ..> Reader
